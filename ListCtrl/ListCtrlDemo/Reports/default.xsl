<?xml version="1.0" ?> 

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

  transform file for source code statistics generated by the XML export feature of the Source Code Counter application.

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

<!DOCTYPE xsl:stylesheet [ 
	<!ENTITY nbsp "&#160;"> 
]> 
 
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">

<!-- create a map of file ids: used later to detect files that appear more than once -->
<xsl:key match="/statistics/file" use="@id" name="file-ids"/>

<xsl:output method="html" doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd" 
  doctype-public="-//W3C//DTD HTML 4.01//EN" indent="yes" />

<xsl:template match="/statistics">

<html>

<head>

<title>Statistics Result</title>

<style type="text/css">
	.detail-item { 
		color: #000090;
	}
	.detail-header { 
		font-family: Helvetica;
		font-size: 12pt;
		font-weight: bold;
		text-align: center;
		color: #000040;
		background-color: #A8B4D8;
	}
	.detail-total { 
		font-weight: bold;
		color: #002020;
		background-color: #90B498;
	}
	.summary-title {
		color: #900000;
		font-size: 14pt;
		font-weight: bold;
	}
	.summary-info {
		font-size: 12pt;
		font-weight: bold;
	}

</style>

</head>

<body>
	<!-- test for old MSXML -->
	<xsl:if test="1=2">
		<font color="red">IF YOU SEE THIS LINE</font><br/>
		..then you are probably running IE5/IE5.5 without the MSXML update.  
		The stylesheet will not render properly.<br/>
		Please refer to the Line Counter documentation for instructions about upgrading
		your version of MSXML.
	</xsl:if>

	<h1>Statistics Result Report</h1>
	<p>Generated by: <i>Source Code Counter Tool v<xsl:value-of select="@plc_ver"/></i> on <b><xsl:value-of select="@date"/></b></p>

	<br />
	<table border="0">
		<tr>
			<td>
				<table border="1" cellpadding="2" cellspacing="0" class="detail-item">
					<!-- headings -->
					<tr class="detail-header">
						<td rowspan="2">File Name</td>
						<td colspan="5">Lines</td>
						<td rowspan="2">Path</td>
					</tr>
					<tr class="detail-header">
						<td>Total</td>
						<td>Code<br />Only</td>
						<td>Comments<br />Only</td>
						<td>Code with<br />Comments</td>
						<td>Blank</td>
					</tr>
					<xsl:for-each select="file">
						<tr>
							<td><xsl:value-of select="name"/></td>
							<td><xsl:value-of select="lines-total"/></td>
							<xsl:variable name="total" select="lines-total"/>
							<td><xsl:call-template name="num_and_percent"><xsl:with-param name="val" select="lines-code"    /><xsl:with-param name="total" select="lines-total"/></xsl:call-template></td>
							<td><xsl:call-template name="num_and_percent"><xsl:with-param name="val" select="lines-comments"/><xsl:with-param name="total" select="lines-total"/></xsl:call-template></td>
							<td><xsl:call-template name="num_and_percent"><xsl:with-param name="val" select="lines-both"    /><xsl:with-param name="total" select="lines-total"/></xsl:call-template></td>
							<td><xsl:call-template name="num_and_percent"><xsl:with-param name="val" select="lines-blank"   /><xsl:with-param name="total" select="lines-total"/></xsl:call-template></td>
							<td><xsl:value-of select="path"/></td>
						</tr>
					</xsl:for-each>

					<!-- summary -->
						<tr class="detail-total">
							<td>Total:</td>
							<xsl:variable name="total" select="sum(file/lines-total)"/>
							<td><xsl:value-of select="$total"/></td>
							<td><xsl:call-template name="num_and_percent"><xsl:with-param name="val" select="sum(file/lines-code)"    /><xsl:with-param name="total" select="$total"/></xsl:call-template></td>
							<td><xsl:call-template name="num_and_percent"><xsl:with-param name="val" select="sum(file/lines-comments)"/><xsl:with-param name="total" select="$total"/></xsl:call-template></td>
							<td><xsl:call-template name="num_and_percent"><xsl:with-param name="val" select="sum(file/lines-both)"    /><xsl:with-param name="total" select="$total"/></xsl:call-template></td>
							<td><xsl:call-template name="num_and_percent"><xsl:with-param name="val" select="sum(file/lines-blank)"   /><xsl:with-param name="total" select="$total"/></xsl:call-template></td>

							<td>&nbsp;</td>
						</tr>

				</table>
			</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
		</tr>
	</table>

	<br/>
	<hr/><em>Powered by Source Code Counter Tool version <xsl:value-of select="@plc_ver"/>.</em>
</body>
</html>

</xsl:template>

<xsl:template name="num_and_percent">
	<xsl:param name="val"/>
	<xsl:param name="total"/>
	<xsl:value-of select="$val"/>
	<xsl:if test="$total > 0">
		<!-- note: it would have been easier to use 
			format-number(..., "#%")
		     but plain vanilla Xalan doesn't support formats.. :( -->
		(<xsl:value-of select="format-number(number($val * 100 div $total),'#0')"/>%)
	</xsl:if>
	<xsl:if test="$total = 0">
		(0%)
	</xsl:if>
</xsl:template>

</xsl:stylesheet>  
